{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// написання функції для HTTP-запитів\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';\n\nexport function nttpRequest (userRequest) {\n    const paramsForHttp = new URLSearchParams ({\n        q: userRequest,\n        key: `49399736-5639b789053676a95c3f2e38d`,\n        image_type: `photo`, \n        orientation: `horizontal`,\n        safesearch : true,\n\n    })\n    return fetch (`https://pixabay.com/api/?${paramsForHttp}`)\n\n    //обробляємо відповідь що прийшла \n    .then (queryResult=>{\n    //робимо перевірку, якщо інфа прийшла з помилкою, то перекидаємо у catch\n    if (!queryResult.ok)\n      {throw new Error(queryResult.status);}\n        \n    //а якщо все ок, тоді РОЗПАРШУЄМО данні для наступного then\n    return queryResult.json();\n    })\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// export function nttpRequest (userRequest) {\n//     const params = new URLSearchParams ({\n//         q: searchUser,\n//         key: `49399736-5639b789053676a95c3f2e38d`,\n//         image_type: `photo`, \n//         orientation: `horizontal`,\n//         safesearch : true,\n//     }) \n\n//     return fetch (`https://pixabay.com/api/?${paramsForHttp}`)\n\n//     //обробляємо відповідь що прийшла \n//     .then (queryResult=>{\n//     //робимо перевірку, якщо інфа прийшла з помилкою, то перекидаємо у catch\n//     if (!queryResult.ok)\n//       {throw new Error(queryResult.status);}\n        \n//     //а якщо все ок, тоді РОЗПАРШУЄМО данні для наступного then\n//     return queryResult.json();\n//     })\n\n\n// }","// функції для відображення елементів інтерфейсу\n\nexport function createCart (element) {\n const {\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    } = element;\n    return ` \n        <li class=\"li-gallery\">\n\n        <a class=\"li-gallery-a\" href=\"${largeImageURL}\">\n        <img class=\"img\" src=\"${webformatURL}\" \n        alt=\"${tags}\" \n        />\n        </a>\n        <ul class=\"baner-info\">\n          <li class=\"baner-info-li\">\n            <p class=\"baner-info-li-title\">Likes</p>\n            <p class=\"baner-info-li-text\">${likes}</p>\n          </li>\n          <li class=\"baner-info-li\">\n            <p class=\"baner-info-li-title\">Views</p>\n            <p class=\"baner-info-li-text\">${views}</p>\n          </li>\n          <li class=\"baner-info-li\">\n            <p class=\"baner-info-li-title\">Comments</p>\n            <p class=\"baner-info-li-text\">${comments}</p>\n          </li>\n          <li class=\"baner-info-li\">\n            <p class=\"baner-info-li-title\">Downloads</p>\n            <p class=\"baner-info-li-text\">${downloads}</p>\n          \n            </li>\n        </ul>\n        </li> `;\n}\n\n","    import iziToast from \"izitoast\";\n    import \"izitoast/dist/css/iziToast.min.css\";\n    // simplelightbox\n    import SimpleLightbox from \"simplelightbox\";\n    import \"simplelightbox/dist/simple-lightbox.min.css\";\n\n    //імпортуємо свої функції для НТТР та відмальовування на сторінці лішок\n    import {nttpRequest} from \"./js/pixabay-api\";\n    import {createCart} from \"./js/render-functions\";\n\n    // шукаємо форму і вішаємо на її сабміт слухача \n    const refs = {\n      form: document.querySelector (`.form`),\n      ulGallery: document.querySelector (`.ul-gallery`),\n      button: document.querySelector ('.button'),\n      loader: document.querySelector ('.loader'),\n    };\n\n    refs.form.addEventListener (`submit`, request);\n\n    function request (event) {\n      refs.loader.classList.toggle(`visually-hidden`);\n      \n    // подія сабміт робить оновлення сторінки, ми це скидаємо \n      event.preventDefault();\n    \n    // ідемо через event.currentTarget.elements.(ім,я з name HTML) + .trim(), щоб не було пробілів\n\n    const userRequest = event.currentTarget.elements.user_request.value.trim(); \n\n    //перевіряємо, щоб не вводили пусте в інпут\n      if (userRequest === '') { button.disabled = true; return; }\n      \n    //робимо запит на сервер pixabay.com за своїм клієнт ключем та параметрами з документації АРІ\n    nttpRequest (userRequest)\n    .then (serverInform => {\n\n    //перевірка справжніх слів\n    if (serverInform.hits.length === 0) {\n      refs.loader.classList.toggle(`visually-hidden`);\n        iziToast.error({\n        position: 'topRight' ,\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n    });\n\n\n    refs.ulGallery.innerHTML = '';\n    refs.form.reset();\n    return;}\n\n    const gallaryCard = serverInform.hits.map(el =>createCart(el)).join('');\n    // метод меп перебирає масив об,єктів і видає на кожній ітерації 1 обєкт , який заповнений рядками з описами кожної картки \n    //але нам потрібен 1 рядок, а не масив рядків, тому ми викликаємо метод .join  і зшиваємо це до купи\n\n    //робимо функцію createCart, яка буде перетворювати отримані данні з сервера на розмітку на сторінці. Створювати картку в HTML з данними, які прийшли з сервера. \n\n\n    //додаємо на сторінку через innerHTML у знайдений список\n    refs.ulGallery.innerHTML = gallaryCard;\n    refs.loader.classList.toggle (`visually-hidden`);\n    refs.form.reset();\n    //відмальовуємо великі зображення за допомогою бібліотеки SimpleLightbox\n    const elemSimpleLightbox = new SimpleLightbox(`.ul-gallery a`, {\n      captionsData: `alt`, \n    });\n      elemSimpleLightbox.refresh();\n    })\n\n    .catch(error => { console.log(error); }\n    )\n};\n\nfunction clear() {\n  refs.ulGallery.innerHTML = '';\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const refs = {\n//     form: document.querySelector (`.form`),\n//     ulGallery: document.querySelector (`.ul-gallery`),\n//     button: document.querySelector ('.button'),\n//     loader: document.querySelector ('.loader'),\n// }\n\n// refs.form.addEventListener('submit', request);\n\n// function request (e) {\n// refs.loader.classList.toggle(`visually-hidden`);\n// // подія сабміт робить оновлення сторінки, ми це скидаємо \n// e.preventDefault();\n\n// // використаємо .trim(), щоб не було пробілів\n// const userRequest = e.target.elements.user_request.value.trim(); \n    \n// //перевіряємо, щоб не вводили пусте в інпут\n//     // searchImages(userValue);\n//     // e.target.reset();\n\n//       if (userRequest === '') {\n//     iziToast.warning({\n//       position: 'topRight',\n//       title: 'WARN',\n//       message: 'You have not specified any search parameters.',\n//     });\n          \n// }\n  \n// clear();\n// removeLoader();\n\n// // робимо запит на сервер pixabay.com за своїм клієнт ключем\n// // та параметрами з документації АРІ\n\n// searchImages(userRequest)\n//     .then(serverInform => {\n\n//         //перевірка справжніх слів\n// if (serverInform.hits.length === 0) {\n//   refs.loader.classList.toggle (`visually-hidden`);\n//   iziToast.error({\n//     position: 'topRight' ,\n//     message: 'Sorry, there are no images matching your search query. Please try again!',\n// });\n\n// refs.ulGallery.innerHTML = '';\n// refs.form.reset();\n// return;}\n\n//  const gallaryCard = serverInform.hits.map(el =>createCart(el)).join('');\n// // метод меп перебирає масив об,єктів і видає на кожній ітерації 1 обєкт , який заповнений рядками з описами кожної картки \n// //але нам потрібен 1 рядок, а не масив рядків, тому ми викликаємо метод .join  і зшиваємо це до купи\n\n// //робимо функцію createCart, яка буде перетворювати отримані данні з сервера на розмітку на сторінці. Створювати картку в HTML з данними, які прийшли з сервера. \n\n\n// //додаємо на сторінку через innerHTML у знайдений список\n// refs.ulGallery.innerHTML = gallaryCard;\n// refs.loader.classList.toggle (`visually-hidden`);\n// refs.form.reset();\n// //відмальовуємо великі зображення за допомогою бібліотеки SimpleLightbox\n// const elemSimpleLightbox = new SimpleLightbox(`.ul-gallery a`, {\n//   captionsData: `alt`, \n// });\n// elemSimpleLightbox.refresh();\n// })\n\n// .catch (error=>{console.log(error);})};"],"names":["axios","nttpRequest","userRequest","paramsForHttp","queryResult","createCart","element","webformatURL","largeImageURL","tags","likes","views","comments","downloads","refs","request","event","serverInform","iziToast","gallaryCard","el","SimpleLightbox","error"],"mappings":"owBAGAA,EAAM,SAAS,QAAU,uCAElB,SAASC,EAAaC,EAAa,CACtC,MAAMC,EAAgB,IAAI,gBAAiB,CACvC,EAAGD,EACH,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAa,EAErB,CAAK,EACD,OAAO,MAAO,4BAA4BC,CAAa,EAAE,EAGxD,KAAMC,GAAa,CAEpB,GAAI,CAACA,EAAY,GACd,MAAM,IAAI,MAAMA,EAAY,MAAM,EAGrC,OAAOA,EAAY,MACvB,CAAK,CACL,CCvBO,SAASC,EAAYC,EAAS,CACpC,KAAM,CACD,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,EAAGP,EACJ,MAAO;AAAA;AAAA;AAAA,wCAG6BE,CAAa;AAAA,gCACrBD,CAAY;AAAA,eAC7BE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAMyBC,CAAK;AAAA;AAAA;AAAA;AAAA,4CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,4CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,4CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,eAKrD,CC7BI,MAAMC,EAAO,CACX,KAAM,SAAS,cAAe,OAAO,EACrC,UAAW,SAAS,cAAe,aAAa,EAChD,OAAQ,SAAS,cAAe,SAAS,EACzC,OAAQ,SAAS,cAAe,SAAS,CAC/C,EAEIA,EAAK,KAAK,iBAAkB,SAAUC,CAAO,EAE7C,SAASA,EAASC,EAAO,CACvBF,EAAK,OAAO,UAAU,OAAO,iBAAiB,EAG9CE,EAAM,eAAc,EAItB,MAAMd,EAAcc,EAAM,cAAc,SAAS,aAAa,MAAM,OAGlE,GAAId,IAAgB,GAAI,CAAE,OAAO,SAAW,GAAM,MAAS,CAG7DD,EAAaC,CAAW,EACvB,KAAMe,GAAgB,CAGvB,GAAIA,EAAa,KAAK,SAAW,EAAG,CAClCH,EAAK,OAAO,UAAU,OAAO,iBAAiB,EAC5CI,EAAS,MAAM,CACf,SAAU,WACV,QAAS,0EACjB,CAAK,EAGDJ,EAAK,UAAU,UAAY,GAC3BA,EAAK,KAAK,QACV,MAAO,CAEP,MAAMK,EAAcF,EAAa,KAAK,IAAIG,GAAKf,EAAWe,CAAE,CAAC,EAAE,KAAK,EAAE,EAQtEN,EAAK,UAAU,UAAYK,EAC3BL,EAAK,OAAO,UAAU,OAAQ,iBAAiB,EAC/CA,EAAK,KAAK,QAEiB,IAAIO,EAAe,gBAAiB,CAC7D,aAAc,KACpB,CAAK,EACoB,QAAO,CAChC,CAAK,EAEA,MAAMC,GAAS,CAAE,QAAQ,IAAIA,CAAK,CAAI,CACtC,CACL"}